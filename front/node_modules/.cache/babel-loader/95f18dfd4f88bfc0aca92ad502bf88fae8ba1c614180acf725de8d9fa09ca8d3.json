{"ast":null,"code":"var _jsxFileName = \"/home/brum/Documentos/Projetos/Projetos full/gerenciamento-web/front/src/Components/ComboButtons.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ArrowDropDownIcon from \"@mui/icons-material/Menu\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComboButtons(_ref) {\n  _s();\n  let {\n    options,\n    row\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const handleMenuItemClick = (event, index) => {\n    console.log(\"index :>> \", row);\n    options[index].onClick(row);\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      variant: \"contained\",\n      ref: anchorRef,\n      \"aria-label\": \"split button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        \"aria-controls\": open ? \"split-button-menu\" : undefined,\n        \"aria-expanded\": open ? \"true\" : undefined,\n        \"aria-label\": \"select merge strategy\",\n        \"aria-haspopup\": \"menu\",\n        onClick: handleToggle,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      sx: {\n        zIndex: 1\n      },\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      children: _ref2 => {\n        let {\n          TransitionProps,\n          placement\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Grow, {\n          ...TransitionProps,\n          style: {\n            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                id: \"split-button-menu\",\n                autoFocusItem: true,\n                children: options.map((_ref3, index) => {\n                  let {\n                    nome,\n                    disabled,\n                    icon: Icon\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    disabled: disabled,\n                    onClick: event => handleMenuItemClick(event, index),\n                    style: {\n                      width: \"140px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginRight: 15,\n                        width: 20\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 23\n                    }, this), nome]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ComboButtons, \"FIn954K0DtsWqXZkIayVtQWUhUQ=\");\n_c = ComboButtons;\nvar _c;\n$RefreshReg$(_c, \"ComboButtons\");","map":{"version":3,"names":["React","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","ComboButtons","options","row","open","setOpen","useState","anchorRef","useRef","handleMenuItemClick","event","index","console","log","onClick","handleToggle","prevOpen","handleClose","current","contains","target","undefined","zIndex","TransitionProps","placement","transformOrigin","map","nome","disabled","icon","Icon","width","marginRight"],"sources":["/home/brum/Documentos/Projetos/Projetos full/gerenciamento-web/front/src/Components/ComboButtons.js"],"sourcesContent":["import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ArrowDropDownIcon from \"@mui/icons-material/Menu\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\n\nexport default function ComboButtons({ options, row }) {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleMenuItemClick = (event, index) => {\n    console.log(\"index :>> \", row);\n    options[index].onClick(row);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup\n        variant=\"contained\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n          color=\"primary\"\n        >\n          {/* <span style={{ color: \"white\", fontWeight: \"bold\" }}>Ações</span> */}\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        sx={{\n          zIndex: 1,\n        }}\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map(({ nome, disabled, icon: Icon }, index) => (\n                    <MenuItem\n                      key={index}\n                      disabled={disabled}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                      style={{ width: \"140px\" }}\n                    >\n                      <div style={{ marginRight: 15, width: 20 }}>\n                        <Icon />\n                      </div>\n                      {nome}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}