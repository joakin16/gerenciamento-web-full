{"ast":null,"code":"var _jsxFileName = \"/home/brum/Documentos/Projetos/React/gerenciamento-web/src/pages/Teste/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./teste.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teste() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  async function handleLogin(e) {\n    e.preventDefault();\n    if (email !== \"\" && password !== \"\") {\n      await signIn(email, password).then(() => {\n        navigate(\"/admin\", {\n          replace: true\n        });\n      }).catch(() => {\n        console.log(\"erro ao fazer login\");\n      });\n    } else {\n      alert(\"preencha todos os campos\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TESTE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Digite seu email...\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"false\",\n        type: \"text\",\n        placeholder: \"******\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Acessar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Teste, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Teste;\nvar _c;\n$RefreshReg$(_c, \"Teste\");","map":{"version":3,"names":["React","useState","useNavigate","Teste","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","signIn","then","replace","catch","console","log","alert","target","value"],"sources":["/home/brum/Documentos/Projetos/React/gerenciamento-web/src/pages/Teste/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./teste.css\";\nexport default function Teste() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  async function handleLogin(e) {\n    e.preventDefault();\n    if (email !== \"\" && password !== \"\") {\n      await signIn(email, password)\n        .then(() => {\n          navigate(\"/admin\", { replace: true });\n        })\n        .catch(() => {\n          console.log(\"erro ao fazer login\");\n        });\n    } else {\n      alert(\"preencha todos os campos\");\n    }\n  }\n\n  return (\n    <div>\n      <h1>TESTE</h1>\n\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"text\"\n          placeholder=\"Digite seu email...\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        ></input>\n\n        <input\n          autoComplete={\"false\"}\n          type=\"text\"\n          placeholder=\"******\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        ></input>\n\n        <button type=\"submit\">Acessar</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC;AACrB,eAAe,SAASC,KAAK,GAAG;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,QAAQ,GAAGN,WAAW,EAAE;EAE9B,eAAeO,WAAW,CAACC,CAAC,EAAE;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIP,KAAK,KAAK,EAAE,IAAIE,QAAQ,KAAK,EAAE,EAAE;MACnC,MAAMM,MAAM,CAACR,KAAK,EAAEE,QAAQ,CAAC,CAC1BO,IAAI,CAAC,MAAM;QACVL,QAAQ,CAAC,QAAQ,EAAE;UAAEM,OAAO,EAAE;QAAK,CAAC,CAAC;MACvC,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;QACXC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC,CAAC,CAAC;IACN,CAAC,MAAM;MACLC,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF;EAEA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eAEd;MAAM,QAAQ,EAAET,WAAY;MAAA,wBAC1B;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,qBAAqB;QACjC,KAAK,EAAEL,KAAM;QACb,QAAQ,EAAGM,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACS,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACnC,eAET;QACE,YAAY,EAAE,OAAQ;QACtB,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,QAAQ;QACpB,KAAK,EAAEd,QAAS;QAChB,QAAQ,EAAGI,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACS,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACtC,eAET;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA7CuBjB,KAAK;EAAA,QAIVD,WAAW;AAAA;AAAA,KAJNC,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}